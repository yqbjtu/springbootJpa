package com.yq.demo.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.TimeZone;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.domain.Sort.Direction;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.yq.demo.dao.UserJpaRepository;
import com.yq.demo.entity.User;
import com.yq.demo.service.UserService;

@Controller   
@RequestMapping(path="/user") 
public class UserController {
    @Autowired // This means to get the bean called userRepository
               // Which is auto-generated by Spring, we will use it to handle the data
    private UserJpaRepository userRepository;

    @Autowired
    private UserService userService;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public  @ResponseBody User addNewUser(@RequestParam String userName,@RequestParam String password,
            @RequestParam String fullName, @RequestParam String email,
            @RequestParam String usertype, @RequestParam String dateformat,
            @RequestParam(value = "timeforamt", defaultValue = "HH:mm:ss") String timeforamt,
            @RequestParam(value = "timezone", defaultValue = "GMT+8") String timezone,
            @RequestParam String language) {

        User user = new User();
        user.setUsername(userName);
        user.setFullname(fullName);
        user.setEmail(email);
        user.setLanguage(language);
        user.setPassword(password);
        user.setActive(1);
        user.setUserType(1);
        user.setCan_delete(1);
        user.setTimeZone(timezone);
        user.setTimeFormat(timeforamt);
        user.setDateFormat(dateformat);
        userRepository.save(user);

        return user;
    }

    @GetMapping(path="/find")
    public @ResponseBody User findByName (@RequestParam String name) {
        return userRepository.getByUserName(name);
    }


    @GetMapping(path="/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        return userRepository.findAll();
    }

    @GetMapping(path="/init")
    public @ResponseBody Iterable<User> insertInitialUsers() {
        User user = new User();
        user.setUsername("张三");
        user.setEmail("zhangsan@qq.com");
        user.setLanguage("zh_CN");
        user.setPassword("password");
        user.setActive(1);
        user.setUserType(1);
        user.setCan_delete(1);
        user.setTimeZone("Asia/Shanghai");
        user.setTimeFormat("HH:mm:ss");
        user.setDateFormat("yyyy/MM/dd");
        userRepository.save(user);
        
        user = new User();
        user.setUsername("李四");
        user.setPassword("password");
        user.setEmail("lisi@qq.com");
        user.setLanguage("zh_CN");
        user.setActive(1);
        user.setUserType(1);
        user.setCan_delete(1);
        user.setTimeZone("America/Grand_Turk");
        user.setTimeFormat("HH:mm:ss");
        user.setDateFormat("yyyy-MM-dd");
        userRepository.save(user);

        user = new User();
        user.setUsername("王五");
        user.setPassword("password");
        user.setLanguage("zh_CN");
        user.setEmail("wangwu@qq.com");
        user.setActive(1);
        user.setUserType(1);
        user.setCan_delete(1);
        user.setTimeZone("Asia/Shanghai");
        user.setTimeFormat("HH:mm:ss");
        user.setDateFormat("yyyy/MM/dd");
        userRepository.save(user);

        user = new User();
        user.setUsername("Eric");
        user.setFullname("Eric Yang");
        user.setPassword("password");
        user.setLanguage("zh_CN");
        user.setEmail("wangwu@qq.com");
        user.setActive(1);
        user.setUserType(1);
        user.setCan_delete(1);
        user.setTimeZone("Asia/Shanghai");
        user.setTimeFormat("HH:mm:ss");
        user.setDateFormat("yyyy/MM/dd");
        userRepository.save(user);
        
        return userRepository.findAll();
    }

    @GetMapping(path="/delete/{id}")
    public @ResponseBody String deleteUser(@PathVariable Integer id) {
         userRepository.delete(id);
         return  "delete id '" + id + "'";
    }

    @RequestMapping("/findByFullName/{fullname}")
    @ResponseBody
    public User getUserByFullName(@PathVariable String fullname){
        User user = userRepository.getByFullName(fullname);
        return user;
    }

}